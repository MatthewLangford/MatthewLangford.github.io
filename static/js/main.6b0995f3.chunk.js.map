{"version":3,"sources":["Components/titleHeader/TitleHeader.js","constants/actionTypes.js","actions/searchAction.js","Components/addStock/AddStock.js","actions/errors.js","Components/stock/Stock.js","Components/stockList/StockList.js","Components/app/App.js","serviceWorker.js","reducers/searchReducer.js","store.js","index.js"],"names":["TitleHeader","_ref","title","react_default","a","createElement","className","SEARCH_RESULTS","ERROR","ERROR_RATE","searchKey","quoteApiKey","regex","AddStock","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchForClosestMatch","asyncToGenerator","regenerator_default","mark","_callee","input","recentSearches","response","bestMatches","wrap","_context","prev","next","state","_","has","setState","searchArray","abrupt","axios","get","concat","sent","data","isEmpty","t0","console","log","stop","_x","apply","arguments","inputValue","handleChange","bind","assertThisInitialized","handleSubmit","event","props","refreshInput","formattedInput","replace","target","value","toUpperCase","symbol","_this2","preventDefault","duplicate","_this$props","addedStocks","errorInput","forEach","stock","searchAndAddStockInfo","_this3","_this$state","_this$props2","inputError","errorRate","onSubmit","onChange","placeholder","type","onClick","map","result","name","e","handleClick","key","Component","connect","dispatch","then","results","results2","payload","Note","Stock","stockInfo","high","low","price","changeAmount","changePercent","truncate","length","Number","toFixed","slice","index","stock_Stock","App","titleHeader_TitleHeader","addStock_AddStock","stockList_StockList","Boolean","window","location","hostname","match","initialState","searchReducer","undefined","action","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","Components_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8SAWeA,qBAPK,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAMH,8GCPCK,SAAiB,kBACjBC,EAAQ,QACRC,EAAa,aCG1B,IAAMC,EAAY,mBACZC,EAAc,mBCGpB,IAAMC,EAAQ,aAgBRC,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWFI,sBAZc,eAAApB,EAAAc,OAAAO,EAAA,EAAAP,CAAAQ,EAAAnB,EAAAoB,KAYU,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAnB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdN,EAAmBb,EAAKoB,MAAxBP,gBAELQ,IAAEC,IAAIT,EAAgBD,GAHH,CAAAK,EAAAE,KAAA,eAIpBnB,EAAKuB,SAAS,CAAEC,YAAaX,EAAeD,KAJxBK,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EASGO,IAAMC,IAAN,qEAAAC,OAA+EhB,EAA/E,6BATH,OASdE,EATcG,EAAAY,KAUZd,EAAgBD,EAASgB,KAAzBf,YACHM,IAAEU,QAAQhB,KACbF,EAAeD,GAASG,EACxBf,EAAKuB,SAAS,CAAEC,YAAaT,KAbXE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAgBpBgB,QAAQC,IAARjB,EAAAe,IAhBoB,iCAAAf,EAAAkB,SAAAxB,EAAAR,KAAA,aAZV,gBAAAiC,GAAA,OAAAjD,EAAAkD,MAAAlC,KAAAmC,YAAA,GAEZtC,EAAKoB,MAAQ,CACXmB,WAAY,GACZf,YAAa,GACbX,eAAgB,IAElBb,EAAKwC,aAAexC,EAAKwC,aAAaC,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAD,KACpBA,EAAK2C,aAAe3C,EAAK2C,aAAaF,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAD,KARRA,4EAgCD4C,GACXzC,KAAK0C,MAAMC,eACX,IAAMC,EAAiB1B,IAAE2B,QAAQJ,EAAMK,OAAOC,MAAOpD,EAAO,IAAIqD,cAChEhD,KAAKoB,SAAS,CAAEgB,WAAYQ,IACxBA,EACF5C,KAAKI,sBAAsBwC,GAEzB5C,KAAKoB,SAAS,CAAEC,YAAa,yCAGvBoB,EAAOQ,GACjBjD,KAAKoB,SAAS,CAAEgB,WAAYa,EAAQ5B,YAAa,0CAGtCoB,GAAO,IAAAS,EAAAlD,KAClByC,EAAMU,iBACN,IAAIC,GAAY,EAFEC,EAGkBrD,KAAK0C,MAAjCY,EAHUD,EAGVC,YAAaC,EAHHF,EAGGE,WACbnB,EAAepC,KAAKiB,MAApBmB,WAENkB,EAAYE,QAAQ,SAAAC,GACfA,EAAM,gBAAkBrB,IACzBmB,IACAL,EAAK9B,SAAS,CAAEgB,WAAY,GAAIf,YAAa,KAC7C+B,GAAY,KAGXA,IACHpD,KAAK0C,MAAMgB,sBAAsBtB,GACjCpC,KAAKoB,SAAS,CAAEC,YAAa,GAAIe,WAAY,uCAK1C,IAAAuB,EAAA3D,KAAA4D,EAC6B5D,KAAKiB,MAAjCmB,EADDwB,EACCxB,WAAYf,EADbuC,EACavC,YADbwC,EAE2B7D,KAAK0C,MAA/BoB,EAFDD,EAECC,WAAYC,EAFbF,EAEaE,UACpB,OACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAM4E,SAAWhE,KAAKwC,cACpBtD,EAAAC,EAAAC,cAAA,SAAO6E,SAAWjE,KAAKqC,aAAeU,MAAQX,EAAa/C,UAAS,eAAAoC,OAAkBqC,EAAa,QAAQ,IAAOI,YAAY,yBAAyBC,KAAK,SAC5JjF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAa8E,KAAK,SAASpB,MAAM,MAAMqB,QAAUpE,KAAKwC,gBAEvEnB,GAA8B,KAAfe,GACflD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACXgC,EAAYgD,IAAI,SAAAC,GAAU,IACJrB,EAA4BqB,EAAzC,aAAgCC,EAASD,EAApB,WAC7B,OAAOpF,EAAAC,EAAAC,cAAA,MAAIgF,QAAU,SAACI,GAAD,OAAOb,EAAKc,YAAYD,EAAGvB,IAAUyB,IAAMzB,GACvD/D,EAAAC,EAAAC,cAAA,YAAQ6D,GAAe/D,EAAAC,EAAAC,cAAA,YAAQmF,OAK7CT,GAAc5E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,0FACd0E,GAAa7E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,wGAvFCsF,aA6FRC,cAnGS,SAAA3D,GACpB,MAAO,CAAEqC,YAAarC,EAAMqC,YACnBQ,WAAY7C,EAAM6C,WAClBC,UAAW9C,EAAM8C,YAXH,SAAAc,GACzB,MAAO,CACLnB,sBAAuB,SAAAjD,GAAK,OAAIoE,EDJrB,SAA+BpE,GAC5C,OAAO,SAACoE,GACNtD,IAAMC,IAAN,kEAAAC,OAA4EhB,EAA5E,4BAAAgB,OAA4G/B,IACzGoF,KAAK,SAACC,GACL,IAAMpD,EAAOoD,EAAQpD,KAAK,gBACtBT,IAAEC,IAAIQ,EAAM,cAEdJ,IAAMC,IAAN,qEAAAC,OAA+EE,EAAK,cAApF,YAAAF,OAA4GhC,IACzGqF,KAAK,SAACE,GACA9D,IAAEU,QAAQoD,EAASrD,KAAKf,aAO3BiE,EAAS,CAAEV,KAAM5E,EAAO0F,SAAS,KANjCtD,EAAK4C,KAAOS,EAASrD,KAAKf,YAAY,GAAG,WACzCiE,EAAS,CACPV,KAAM7E,EACN2F,QAAStD,OAMRoD,EAAQpD,KAAKuD,KACtBL,EAAS,CAAEV,KAAM3E,EAAYyF,SAAS,IAEtCJ,EAAS,CAAEV,KAAM5E,EAAO0F,SAAS,OClBEvB,CAAsBjD,KAC/DkC,aAAc,kBAAMkC,ECXf,SAACA,GACNA,EAAS,CAAEV,KAAM5E,EAAO0F,SAAS,IACjCJ,EAAS,CAAEV,KAAM3E,EAAYyF,SAAS,ODUtC1B,WAAY,kBAAMsB,ECLb,SAAAA,GAAQ,OAAIA,EAAS,CAAEV,KAAM5E,EAAO0F,SAAS,SD4GvCL,CAA6ChF,GEtF7CuF,eA3BD,SAAAnG,GAAoB,IAAhBoG,EAAgBpG,EAAhBoG,UACMnC,EAC4DmC,EAD1E,cAAkCC,EACwCD,EADpD,YAA6BE,EACuBF,EADlC,WAA6BG,EACKH,EADlB,aAC1CI,EAA4DJ,EAA1E,cAAkDK,EAAwBL,EAA9C,sBAAqCb,EAASa,EAATb,KACzE,OACErF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACjBH,EAAAC,EAAAC,cAAA,WAASC,UAAU,uBACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAsB6B,IAAEwE,SAASnB,EAAM,CAACoB,OAAU,MAAWzG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB4D,IAE3G/D,EAAAC,EAAAC,cAAA,WAASC,UAAU,8BACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,OAAgCuG,OAAOP,GAAMQ,QAAQ,MAGzD3G,EAAAC,EAAAC,cAAA,WAASC,UAAU,qBACjBH,EAAAC,EAAAC,cAAA,WAASC,UAAU,0BACjBH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,iBAAAoC,OAAoB+D,EAAe,GAAK,QAAYA,EAAe,EAAItG,EAAAC,EAAAC,cAAA,uBAAsBF,EAAAC,EAAAC,cAAA,uBACxGwG,OAAOJ,GAAcK,QAAQ,GAAI3G,EAAAC,EAAAC,cAAA,iBAAUwG,OAAOH,EAAcK,MAAM,GAAI,IAAID,QAAQ,GAArD,OACrC3G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,IAA+BuG,OAAOL,GAAOM,QAAQ,KAEvD3G,EAAAC,EAAAC,cAAA,WAASC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,OAA+BuG,OAAON,GAAKO,QAAQ,SCF9CjB,cAhBS,SAAA3D,GACpB,MAAO,CAAEqC,YAAarC,EAAMqC,cAejBsB,CAZG,SAAA5F,GAAqB,IAAlBsE,EAAkBtE,EAAlBsE,YACnB,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZiE,EAAYe,IAAI,SAACZ,EAAOsC,GACvB,OAAO7G,EAAAC,EAAAC,cAAC4G,EAAD,CAAOtB,IAAMqB,EAAQX,UAAY3B,MAGzCvC,IAAEU,QAAQ0B,IAAgBpE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,qBCClB4G,EAVH,WACV,OACE/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8G,EAAD,CAAajH,MALL,kBAMRC,EAAAC,EAAAC,cAAC+G,EAAD,MACAjH,EAAAC,EAAAC,cAACgH,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8EChBAC,EAAe,CACnBpD,YAAa,GACbQ,YAAY,EACZC,WAAW,GAgBE4C,EAbO,WAAkC,IAAjC1F,EAAiCkB,UAAAwD,OAAA,QAAAiB,IAAAzE,UAAA,GAAAA,UAAA,GAAzBuE,EAAcG,EAAW1E,UAAAwD,OAAA,EAAAxD,UAAA,QAAAyE,EACtD,OAAQC,EAAO1C,MACb,KAAK7E,EACH,OAAOQ,OAAOgH,OAAO,GAAI7F,EAAO,CAAEqC,YAAarC,EAAMqC,YAAY7B,OAAOoF,EAAO5B,WACjF,KAAK1F,EACH,OAAOO,OAAOgH,OAAO,GAAI7F,EAAO,CAAE6C,WAAY+C,EAAO5B,UACvD,KAAKzF,EACH,OAAOM,OAAOgH,OAAO,GAAI7F,EAAO,CAAE8C,UAAW8C,EAAO5B,UACtD,QACE,OAAOhE,ICVE8F,EAFDC,YAAYL,EAAeM,YAAgBC,MCKzDC,IAASC,OACLlI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAUN,MAAQA,GACd7H,EAAAC,EAAAC,cAACkI,EAAD,OAEJC,SAASC,eAAe,SHmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,KAAK,SAAA8C,GACjCA,EAAaC","file":"static/js/main.6b0995f3.chunk.js","sourcesContent":["import React from 'react';\n\nimport './titleHeader.css';\n\nconst TitleHeader = ({ title }) => {\n  return (\n    <div className='title-header'>\n      <h1>{ title }</h1>\n    </div>\n  );\n};\nexport default TitleHeader;\n","export const SEARCH_RESULTS = 'SEARCH_RESULTS';\nexport const ERROR = 'ERROR';\nexport const ERROR_RATE = 'ERROR_RATE';\n","import axios from 'axios';\nimport _ from 'lodash';\n\nimport { SEARCH_RESULTS, ERROR, ERROR_RATE } from '../constants/actionTypes';\n\nconst searchKey = 'BMC7PQQO0DZSICTZ';\nconst quoteApiKey = 'YTH6BC9T22YO34HQ';\n\n// Searches for stock info and sends the result to the reducer.\nexport default function searchAndAddStockInfo(input) {\n  return (dispatch) => {\n    axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${input}&outputsize=full&apikey=${quoteApiKey}`)\n      .then((results) => {\n        const data = results.data['Global Quote'];\n        if (_.has(data, '01. symbol')) {\n        // if data was found I still need the name of the stock\n          axios.get(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${data['01. symbol']}&apikey=${searchKey}`)\n            .then((results2) => {\n              if (!_.isEmpty(results2.data.bestMatches)) {\n                data.name = results2.data.bestMatches[0]['2. name'];\n                dispatch({\n                  type: SEARCH_RESULTS,\n                  payload: data,\n                });\n              } else {\n                dispatch({ type: ERROR, payload: true });\n              }\n            });\n        } else if (results.data.Note) {\n          dispatch({ type: ERROR_RATE, payload: true });\n        } else {\n          dispatch({ type: ERROR, payload: true });\n        }\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport './addStock.css';\nimport { refreshInput, errorInput } from '../../actions/errors';\nimport  searchAndAddStockInfo from '../../actions/searchAction';\n\nconst regex = /[^\\w+.&-]/g;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchAndAddStockInfo: input => dispatch(searchAndAddStockInfo(input)),\n    refreshInput: () => dispatch(refreshInput()),\n    errorInput: () => dispatch(errorInput()),\n  };\n};\n\nconst mapStateToProps = state => {\n    return { addedStocks: state.addedStocks,\n             inputError: state.inputError,\n             errorRate: state.errorRate };\n};\n\nclass AddStock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputValue: '',\n      searchArray: [],\n      recentSearches: {},\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  };\n  \n  // Searches for the closest match to the stock symbol you type.\n  searchForClosestMatch = async input => {\n    const { recentSearches } = this.state;\n    // Checking to see if you had types that search already before hitting the API.\n    if(_.has(recentSearches, input)){\n      this.setState({ searchArray: recentSearches[input] });\n      return;\n    };\n    // If symbol entered is not in the recent searches object, we use the API to search.\n    try {\n      const response = await axios.get(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${input}&apikey=BMC7PQQO0DZSICTZ`);\n      const { bestMatches } = response.data;\n      if (!_.isEmpty(bestMatches)) {\n        recentSearches[input] = bestMatches;  \n        this.setState({ searchArray: bestMatches });\n      };\n    } catch(error) {\n      console.log(error);\n    };\n  };\n  // Formats the inputed text then passes it to function above.\n  handleChange(event) {\n    this.props.refreshInput();\n    const formattedInput = _.replace(event.target.value, regex, '').toUpperCase();\n    this.setState({ inputValue: formattedInput });\n    if (formattedInput) {\n      this.searchForClosestMatch(formattedInput);\n    } else {\n        this.setState({ searchArray: [] });\n    };\n  };\n  handleClick(event, symbol) {\n    this.setState({ inputValue: symbol, searchArray: [] });\n  };\n  // Handles firing off the SearchAndAdd action.\n  handleSubmit(event) {\n    event.preventDefault();\n    let duplicate = false;\n    const { addedStocks, errorInput } = this.props;    \n    const { inputValue } = this.state;\n    //Checking for duplicates \n      addedStocks.forEach(stock => {\n        if(stock['01. symbol'] === inputValue){\n          errorInput();\n          this.setState({ inputValue: '', searchArray: [] })\n          duplicate = true;\n        }\n      });\n      if (!duplicate) {\n        this.props.searchAndAddStockInfo(inputValue);\n        this.setState({ searchArray: [], inputValue: '' });\n      }\n  }; \n  \n  \n  render() {\n    const { inputValue, searchArray } = this.state;\n    const { inputError, errorRate } = this.props;\n    return (\n      <div className='add-stock-div'>\n        <form onSubmit={ this.handleSubmit }>     \n          <input onChange={ this.handleChange } value={ inputValue } className={ `stock-input ${inputError ? 'error':''}` } placeholder=' Enter stock symbol...' type='text' /> \n          <input className='add-button' type='submit' value='ADD' onClick={ this.handleSubmit } />\n        </form>  \n        {(searchArray && inputValue !== '') &&\n          <ul className='search-list'>\n            {searchArray.map(result => {\n              const { '1. symbol': symbol, '2. name': name } = result;\n              return <li onClick={ (e) => this.handleClick(e, symbol) } key={ symbol }>\n                       <span>{ symbol }</span><span>{ name }</span>\n                     </li>\n            })}\n          </ul>\n        }\n        {inputError && <p className='error-pop-up'>Oops! The stock you entered has been added already or doesn't exist. Please try again.</p>}\n        {errorRate && <p className='error-pop-up'>Uh oh! This free api can't handle this many requests lol. Please try again in 10-20 seconds.</p>}\n      </div>\n    )\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStock);\n","import { ERROR, ERROR_RATE } from '../constants/actionTypes';\n\nexport function refreshInput() {\n  return (dispatch) => {\n    dispatch({ type: ERROR, payload: false });\n    dispatch({ type: ERROR_RATE, payload: false });\n  };\n}\n\nexport function errorInput() {\n  return dispatch => dispatch({ type: ERROR, payload: true });\n}\n","import React from 'react';\nimport _ from 'lodash';\n\nimport './stock.css';\n\nconst Stock = ( { stockInfo }) => {\n  const { '01. symbol': symbol, '03. high': high, '04. low': low, '05. price': price,\n          '09. change': changeAmount, '10. change percent': changePercent, name } = stockInfo;\n  return (\n    <div className='stock-card'>\n      <section className='stock-card-top'>\n        <section className='stock-card-top-left'>\n          <h4 className='stock-name-header'>{ _.truncate(name, {'length': 15}) }</h4><p className='stock-symbol'>{ symbol }</p>\n        </section>\n        <section className='stock-card-top-right right'>\n          <p className='stock-high'>HI ${ Number(high).toFixed(2) }</p>\n        </section>          \n      </section>\n      <section className='stock-card-bottom'>\n        <section className='stock-card-bottom-left'>\n          <span className={ `change-amount ${changeAmount > 0 && 'pos'}` }>{ changeAmount > 0 ? <span>&#8683; </span>:<span>&#8681; </span>} \n            { Number(changeAmount).toFixed(2) }<span> ({ Number(changePercent.slice(0, -1)).toFixed(2) }%)</span></span>\n          <h3 className='stock-price'>${ Number(price).toFixed(2) }</h3>\n        </section>\n        <section className='stock-card-bottom-right'>\n          <p className='stock-low'>LO ${ Number(low).toFixed(2) }</p>\n        </section>          \n      </section>\n    </div>\n  )\n};\n\nexport default Stock;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport './stockList.css';\nimport Stock from '../stock/Stock';\n\nconst mapStateToProps = state => {\n    return { addedStocks: state.addedStocks };\n};\n\nconst StockList = ({ addedStocks }) => {\n  return (\n    <div className='stock-list'>\n      {addedStocks.map((stock, index) =>{\n        return <Stock key={ index } stockInfo={ stock }/>\n        })\n      }       \n      {_.isEmpty(addedStocks) && <h1 className='no-stocks-header'>No Stocks Yet!</h1>}         \n    </div>\n  )\n};\n\nexport default connect(mapStateToProps)(StockList);\n","import React from 'react';\n\nimport './App.css';\nimport TitleHeader from '../titleHeader/TitleHeader';\nimport AddStock from '../addStock/AddStock';\nimport StockList from '../stockList/StockList';\n\nconst title = 'Stock Watcher';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <TitleHeader title ={ title } />\n      <AddStock />\n      <StockList />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH_RESULTS, ERROR, ERROR_RATE } from '../constants/actionTypes';\n\nconst initialState = {\n  addedStocks: [],\n  inputError: false,\n  errorRate: false,\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_RESULTS:\n      return Object.assign({}, state, { addedStocks: state.addedStocks.concat(action.payload) });\n    case ERROR:\n      return Object.assign({}, state, { inputError: action.payload });\n    case ERROR_RATE:\n      return Object.assign({}, state, { errorRate: action.payload });\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport searchReducer from './reducers/searchReducer';\n\nconst store = createStore(searchReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './Components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}